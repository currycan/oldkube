---

- block:
  - name: 创建 etcd 证书存放目录
    file: path={{ etcd_pki_dir }} state=directory

  - name: 检查 etcd 相关证书签名请求文件是否存在
    stat: path="{{ etcd_pki_dir }}/{{ item.bare }}.pem"
    with_items:
      - { file: etcd-ca-csr.json, name: etcd-ca, org: etcd, bare: etcd-ca}
      - { file: etcd-csr.json, name: etcd, org: etcd, bare: etcd }
      - { file: etcd-peer-csr.json, name: etcd, org: etcd, bare: etcd-peer }
      - { file: etcd-healthcheck-client-csr.json, name: etcd, org: etcd, bare: etcd-healthcheck-client }
      - { file: apiserver-etcd-client-csr.json, name: etcd, org: "system:masters", bare: apiserver-etcd-client }
    register: check_etcd_json_files

  - name: 创建 etcd CA 证书签名请求文件
    when: check_etcd_json_files and not item.stat.exists
    template:
      src: ca-csr.json.j2
      dest: "{{ etcd_pki_dir }}/{{ item.item.file }}"
    with_items: "{{ check_etcd_json_files['results'] }}"
    register: gen_etcd_json_files

  - name: 检查 etcd CA 根证书是否存在
    stat:
      path: "{{ etcd_ca }}"
    register: check_etcd_ca_file

  - name: 生成 etcd CA 根证书
    when: not check_etcd_ca_file.stat.exists
    shell: |
      {{ bin_dir }}/cfssl gencert -initca {{ etcd_pki_dir }}/etcd-ca-csr.json | \
        {{ bin_dir }}/cfssljson -bare {{ etcd_pki_dir }}/etcd-ca
    register: create_etcd_ca_file

  - name: 检查 etcd 证书是否存在
    stat:
      path: "{{ etcd_pki_dir }}/{{ item.bare }}.pem"
    with_items:
      - { file: etcd-csr.json, ca: etcd-ca, bare: etcd }
      - { file: etcd-peer-csr.json, ca: etcd-ca, bare: etcd-peer }
      - { file: etcd-healthcheck-client-csr.json, ca: etcd-ca, bare: etcd-healthcheck-client }
      - { file: apiserver-etcd-client-csr.json, ca: etcd-ca, bare: apiserver-etcd-client }
    register: check_etcd_ssl_file

  - name: 生成 etcd 证书
    when: check_etcd_ssl_file and not item.stat.exists
    shell: |
      {{ bin_dir }}/cfssl gencert \
        -ca={{ etcd_ca }} \
        -ca-key={{ etcd_ca_key }} \
        -config={{ ca_config }} \
        -hostname={{ etcd_hosts | trim }} \
        -profile={{ cert_info_profile }} \
        {{ etcd_pki_dir }}/{{ item.item.file }} | \
        {{ bin_dir }}/cfssljson -bare {{ etcd_pki_dir }}/{{ item.item.bare }}
    with_items: "{{ check_etcd_ssl_file['results'] }}"
    register: create_etcd_ssl_file
  run_once: true
  delegate_to: "{{ groups['masters'][0] }}"
