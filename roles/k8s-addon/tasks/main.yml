---

- block:
  - name: 创建 {{ addon.name }} addons 目录
    when: addon is defined
    file: path="{{ addon_dir }}/{{ item }}" state=directory
    with_items: "{{ addon.directories }}"

  - name: 配置 {{ addon.name }} addon 部署依赖文件
    when: addon is defined and addon.dependencies is defined
    template:
      src: "{{ item.1 }}.j2"
      dest: "{{ addon_dir }}/{{ item.1 }}"
    with_subelements:
      - "{{ addon.dependencies }}"
      - files
    register: copy_addon_deps

  - name: 创建 {{ addon.name }} addon 依赖
    when: addon is defined and addon.dependencies is defined and copy_addon_deps
    command: |
      {{ bin_dir }}/kubectl --kubeconfig={{ admin_kubeconfig }} \
        apply -f {{ addon_dir }}/{{ item.1 }}
    with_subelements:
      - "{{ addon.dependencies }}"
      - files
    register: apply_addon_deps
    until: apply_addon_deps.rc == 0
    retries: 10
    delay: "{{ retry_stagger | random + 2 }}"

  - name: 检查 {{ addon.name }} addon 依赖状态
    when: addon is defined and addon.dependencies is defined and apply_addon_deps
    shell: |
      {{ bin_dir }}/kubectl -n {{ item.namespace | default('') }} --kubeconfig={{ admin_kubeconfig }} \
        get {{ item.kind }} --no-headers -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase | \
        grep {{ item.name }} | awk '{ print $2}' | uniq
    with_items: "{{ addon.dependencies }}"
    register: check_addon_deps
    until: check_addon_deps.stdout == 'Running' or check_addon_deps.stdout == 'Active'
    retries: 10
    delay: "{{ retry_stagger | random + 30 }}"

  - name: 配置 {{ addon.name }} addon 部署文件
    when: addon is defined and addon.files is defined
    copy:
      src: "{{ item }}"
      dest: "{{ addon_dir }}/{{ item }}"
    with_items: "{{ addon.files }}"
    register: copy_addon_files

  - name: 生成 {{ addon.name }} addon 部署文件
    when: addon is defined
    template:
      src: "{{ item }}.j2"
      dest: "{{ addon_dir }}/{{ item }}"
    with_items: "{{ addon.templates }}"
    register: copy_addon_templates

  - name: 部署 {{ addon.name }} addon
    when: addon is defined and copy_addon_templates
    command: |
      {{ bin_dir }}/kubectl --kubeconfig={{ admin_kubeconfig }} \
        apply -f {{ addon_dir }}/{{ item }}
    with_items: "{{ addon.directories  }}"
    register: apply_addon
    until: apply_addon.rc == 0
    retries: 1
    delay: "{{ retry_stagger | random + 3 }}"
  run_once: true
  delegate_to: "{{ groups['masters'][0] }}"
