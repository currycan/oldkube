

- name: get calico-etcd-secrets info
  shell: "{{ bin_dir }}/kubectl get secrets -n kube-system"
  register: secrets_info

- name: 创建 calico-etcd-secrets
  shell: "cd /etc/calico/ssl && \
        {{ bin_dir }}/kubectl create secret generic -n kube-system calico-etcd-secrets \
        --from-file=etcd-ca={{ ca_dir }}/ca.pem \
        --from-file=etcd-key=calico-key.pem \
        --from-file=etcd-cert=calico.pem"
  when: '"calico-etcd-secrets" not in secrets_info.stdout'

- name: 配置 calico DaemonSet yaml文件
  template: src=calico-{{ CALICO_MAIN_VER }}.yaml.j2 dest=/opt/kube/kube-system/calico/calico.yaml

  delegate_to: "{{ groups.deploy[0] }}"
  run_once: true

- name: node 节点创建calico 相关目录
  file: name={{ item }} state=directory
  with_items:
    - /etc/calico/ssl
    - /etc/cni/net.d

# [可选]cni calico plugins 已经在calico.yaml完成自动安装
- name: 安装 calicoctl 客户端
  copy: src={{ base_dir }}/bin/calico/{{ item }} dest={{ bin_dir }}/{{ item }} mode=0755
  with_items:
  #- calico
  #- calico-ipam
  #- loopback
  - calicoctl


- name: 准备 calicoctl配置文件
  template: src=calicoctl.cfg.j2 dest=/etc/calico/calicoctl.cfg

# 只需单节点执行
- name: 运行 calico网络
  shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/calico/ && sleep 5"
  delegate_to: "{{ groups.deploy[0] }}"

# 等待网络插件部署成功，视下载镜像速度而定
- name: 轮询等待calico-node 运行，视下载镜像速度而定
  shell: "{{ bin_dir }}/kubectl get pod -n kube-system -o wide|grep 'calico-node'|grep ' {{ inventory_hostname }} '|awk '{print $3}'"
  register: pod_status
  until: pod_status.stdout == "Running"
  delegate_to: "{{ groups.deploy[0] }}"
  retries: 15
  delay: 15
  ignore_errors: true
